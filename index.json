[{"categories":["C＃","Maintain","Asp.Net"],"content":"MVC 5 專案之眉眉角角 ","date":"2022-06-09","objectID":"/posts/mvc5_meta/:0:0","tags":["Asp.Net MVC"],"title":"MVC 5 專案之眉眉角角","uri":"/posts/mvc5_meta/"},{"categories":["C＃","Maintain","Asp.Net"],"content":"Filter Filter 的作用是在 Action 執行前或執行後做一些加工處理 Authorization Filter： Authorization 是五種 Filter 中優先序最高的，通常用於驗證 Request 合不合法，不合法後面就直接跳過。 Resource Filter： Resource 是第二優先，會在 Authorization 之後，Model Binding 之前執行。通常會是需要對 Model 加工處裡才用。 Action Filter： 最容易使用的 Filter，封包進出都會經過它，使用上沒什麼需要特別注意的。跟 Resource Filter 很類似，但並不會經過 Model Binding。 Exception Filter： 異常處理的 Exception。 Result Filter： 當 Action 完成後，最終會經過的 Filter。 ","date":"2022-06-09","objectID":"/posts/mvc5_meta/:1:0","tags":["Asp.Net MVC"],"title":"MVC 5 專案之眉眉角角","uri":"/posts/mvc5_meta/"},{"categories":["C＃","Maintain","Asp.Net"],"content":"運作方式 ASP .NET Core 的每個 Request 都會先經過已註冊的 Middleware 接著才會執行 Filter，除了會依照上述的順序外，同類型的 Filter 預設都會以先進後出的方式處裡封包。 Response 在某些 Filter 並不會做處理，會值接 Bypass。Request 及 Response 的運作流程如下圖： 黃色箭頭是正常情況流程 灰色箭頭是異常處理流程 ","date":"2022-06-09","objectID":"/posts/mvc5_meta/:1:1","tags":["Asp.Net MVC"],"title":"MVC 5 專案之眉眉角角","uri":"/posts/mvc5_meta/"},{"categories":["C＃","Maintain","Asp.Net"],"content":"參考資料 John Wu’s [鐵人賽 Day14] ASP.NET Core 2 系列 - Filters ","date":"2022-06-09","objectID":"/posts/mvc5_meta/:2:0","tags":["Asp.Net MVC"],"title":"MVC 5 專案之眉眉角角","uri":"/posts/mvc5_meta/"},{"categories":["Learning"],"content":"Git 學習筆記 位於索引中的檔案 : Tracked files(追蹤的檔案) 不再索引內的檔案 : Untracked files(未被追蹤的檔案) working tree 是工作目錄 只要 被索引中的檔案內容 跟 工作目錄中的檔案內容一致 就會被稱為一個 “Stage“狀態 只要 被索引中的檔案內容 跟 工作目錄中的檔案內容不一致 就會被稱為一個 “Unstage“狀態 ","date":"2022-06-08","objectID":"/posts/git-learning/:0:0","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"Git 指令 Command: git -m = message init = 建立 add = 加入 GIT 索引 rm = 刪除 status = 看目前狀態 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:0","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git diff 顯示差異 HEAD = 比對變更與目前最新版的變更差異 -cached = 索引裡的變更與本地儲存庫最新的變更差異 --binary = 比對二進位檔案差異 --name-only = 比對工作目錄檔案,列出檔案名稱 --name-status = 列出工作目錄及索引之間有多少檔案是被異動的 git diff 'src-commit' 'tgt-commit' commit 與 commit 比較差異 git diff 'commit' 與目標 commit 差異 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:1","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git reset 重置索引 -p = 選取索引中的那些變更有哪些內容要從索引中移除 HEAD = 重置索引及分支(加 ~1 是恢復前一版本,以此類推) --mixed = 重置 HEAD 及索引(預設值) --hard = 重置 HEAD,索引及工作目錄 --hard ORIG_HEAD = 回復前版本(永遠回復 reset 之前的版本) ","date":"2022-06-08","objectID":"/posts/git-learning/:1:2","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git revert 還原歷史上的版本，做相反的 commit -h = help 列出功能 --abort = 取消 --continue = 繼續 --quit = 停止 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:3","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git clone 下載遠端儲存庫 git clone --no-checkout 'URL' 'Filename' 會以 filename 為主並且不做 checkout git clone --bare 'url' 把儲存庫的本身下載下來 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:4","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git log 看紀錄 --oneline = 短的 log 版本 --oneline --graph = log 版本+線圖可加 “-數字” 以顯示筆數 git log --oneline --graph --all -10 全部的歷史資料取 10 筆 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:5","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git reflog 會記錄工作目錄底下做過的每一次的版控紀錄 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:6","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git checkout 取出/取回 -- 'name' = 從索引裡面把 name 檔案的內容整個複製回工作目錄 --orphan = 建立全新分支且沒有 parents checkout -b \"Filename\" 可以新增分支後切換 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:7","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git switch 切換分支 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:8","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git clean 清除工作目錄 -f = 強制刪除 -d = 刪除整個工作目錄 -x = 執行清除任務,並忽略.gitignore 設定 -n = 看那些檔案會被清除 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:9","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git stash 暫存工作目錄的變更 save 'message' = 暫存 pop = 取回暫存 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:10","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git branch 查看分支/新增分支 -d = 刪除分支(只能刪除已經合併的分支) -D = 強制刪除分支 -r = 列出所有遠端追蹤分支 -a = 列出所有遠端+本地分支 git branch --merged 列出所有已合併過的分支 git branch --no-merged 列出所有未合併過的分支 git branch --merged | egrep -v \"(^\\*|master|develop)\" | xargs git branch -d 刪除所有已合併過的分支(CMD/Powershell 不可用) ","date":"2022-06-08","objectID":"/posts/git-learning/:1:11","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git merge 合併分支 --ff = 快轉合併(預設) --no-ff = 非快轉合併 --ff-only = 僅有快轉合併 --no-commit = 不提交的合併 --abort = 放棄合併 --squash = 壓縮後合併(不可以與關閉快轉機制一起使用,且不會有合併線圖出現) git merge --no-ff --no-commit 'branchName' 合併可以不 commit ","date":"2022-06-08","objectID":"/posts/git-learning/:1:12","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git rebase 'commit_id' 重訂基底合併 -i --continue = 繼續 --skip = --abort = 取消 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:13","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git cherry-pick 正向挑選合併 --continue = 繼續 --quit = 停止 --abort = 取消 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:14","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git push 推送至遠端 --all = 全部分支推送 git push -u origin master 將本地分支(master)與遠端分支(origin)建立連結 git push origin --delete ‘branchName’ 刪除遠端分支(要先把本地刪除) ","date":"2022-06-08","objectID":"/posts/git-learning/:1:15","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git fetch 將遠端儲存庫的變更下載回來 --prune 將遠端已刪除的分支剪除 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:16","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git pull 將遠端儲存庫拉下來 pull = git fetch + git merge git pull --rebase = git fetch + git rebase ","date":"2022-06-08","objectID":"/posts/git-learning/:1:17","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git remote 遠端 -v = 列出網址 -h = remote 的 help set-url = 更改網址 git remote set-url origin 'new url' 將舊網址改成新網址 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:18","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git commit 建立版本 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:19","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git apply 套用版本(進版) --check = 確認檔案 --reverse = 退版(簡寫-R) ","date":"2022-06-08","objectID":"/posts/git-learning/:1:20","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"git config GIT 的設定 加上 --global 可以設定 core.quotepath = 改 false 可顯示中文 core.editor = 查看目前編輯器 git 只能顯示 ASCII 的字元 git bash 以外的環境要改中文 set LC_ALL=C.UTF-8 更改環境變數 (永久儲存) setx LC_ALL C.UTF-8 MAC/Linux export LC_ALL=C.UTF-8 ","date":"2022-06-08","objectID":"/posts/git-learning/:1:21","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"衝突問題 顯示訊息: content = 內容衝突 建議用手動合併 ","date":"2022-06-08","objectID":"/posts/git-learning/:2:0","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"},{"categories":["Learning"],"content":"參考資料 為自己學 GIT-另一種合併方式（使用 rebase） ","date":"2022-06-08","objectID":"/posts/git-learning/:3:0","tags":["Git"],"title":"Git 學習筆記","uri":"/posts/git-learning/"}]