<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>ASP.NET Core - 分類 - The Lazy Engineer Lou&#39;s Note</title>
        <link>https://loulazynote.github.io/categories/asp.net-core/</link>
        <description>ASP.NET Core - 分類 - The Lazy Engineer Lou&#39;s Note</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-TW</language><managingEditor>louChang.tw@gmail.com (Lou Chang)</managingEditor>
            <webMaster>louChang.tw@gmail.com (Lou Chang)</webMaster><lastBuildDate>Tue, 10 Aug 2021 17:26:15 &#43;0800</lastBuildDate><atom:link href="https://loulazynote.github.io/categories/asp.net-core/" rel="self" type="application/rss+xml" /><item>
    <title>Asp .Net Core 5.0 筆記 - 資料存取篇(EFCore6)</title>
    <link>https://loulazynote.github.io/note/dot-net-core%E9%96%8B%E7%99%BC%E5%AF%A6%E6%88%B0%E7%AD%86%E8%A8%98/%E8%B3%87%E6%96%99%E5%AD%98%E5%8F%96%E7%AF%87efcore6/</link>
    <pubDate>Tue, 10 Aug 2021 17:26:15 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/note/dot-net-core%E9%96%8B%E7%99%BC%E5%AF%A6%E6%88%B0%E7%AD%86%E8%A8%98/%E8%B3%87%E6%96%99%E5%AD%98%E5%8F%96%E7%AF%87efcore6/</guid>
    <description><![CDATA[什麼是 Entity Framework 一個 ORM 框架 可大幅減少開發時期資料存取的程式碼 透過 LINQ 自動產生 SQL 指令碼 透過「強型別」取得與操作物件資料 支援變更追蹤、資料識別、延遲載入]]></description>
</item>
<item>
    <title>Asp .Net Core 5.0 筆記 - 新手上路</title>
    <link>https://loulazynote.github.io/note/dot-net-core%E9%96%8B%E7%99%BC%E5%AF%A6%E6%88%B0%E7%AD%86%E8%A8%98/%E6%96%B0%E6%89%8B%E4%B8%8A%E8%B7%AF/</link>
    <pubDate>Sat, 10 Jul 2021 17:26:15 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/note/dot-net-core%E9%96%8B%E7%99%BC%E5%AF%A6%E6%88%B0%E7%AD%86%E8%A8%98/%E6%96%B0%E6%89%8B%E4%B8%8A%E8%B7%AF/</guid>
    <description><![CDATA[1. Asp .NET Core 開發框架 跨平台、高效能、開放原始碼架構 主要用來開發現代化、雲端、網際網路連線應用程式 透過 ASP .NET Core 可以 建置網站或 Web API 使用任何你喜愛的開發]]></description>
</item>
<item>
    <title>Asp .Net Core 5.0 筆記 - 基本框架</title>
    <link>https://loulazynote.github.io/note/dot-net-core%E9%96%8B%E7%99%BC%E5%AF%A6%E6%88%B0%E7%AD%86%E8%A8%98/%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%B4%B9/</link>
    <pubDate>Mon, 10 May 2021 17:26:15 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/note/dot-net-core%E9%96%8B%E7%99%BC%E5%AF%A6%E6%88%B0%E7%AD%86%E8%A8%98/%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%B4%B9/</guid>
    <description><![CDATA[tags: `` [TOC] .NET Core 基礎生態 EF 與 CORE 得差異 WCF Clinet 可以為 Core 所有 Core 不支援 WCF 底層得實作不同 .Net Standard 標準類別庫 是一個標準規格 定義所有.net 平臺需要支援得 API 有那些 所有]]></description>
</item>
<item>
    <title>SeriLog 設定筆記</title>
    <link>https://loulazynote.github.io/note/%E5%AF%A6%E7%89%A9%E7%B6%93%E9%A9%97/serilog-%E8%A8%AD%E5%AE%9A%E7%AD%86%E8%A8%98/</link>
    <pubDate>Mon, 10 May 2021 17:26:15 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/note/%E5%AF%A6%E7%89%A9%E7%B6%93%E9%A9%97/serilog-%E8%A8%AD%E5%AE%9A%E7%AD%86%E8%A8%98/</guid>
    <description><![CDATA[Installation 用 NuGet 搜尋 Serilog.AspNetCore安裝套件 在 Program.cs 加入設定 1 2 3 4 5 6 7 Log.Logger = new LoggerConfiguration() .MinimumLevel.Override(&#34;Microsoft&#34;, LogEventLevel.Warning) .MinimumLevel.Override(&#34;System&#34;, LogEventLevel.Warning)/]]></description>
</item>
<item>
    <title>ValueInjecter@3.2.0 簡單用法</title>
    <link>https://loulazynote.github.io/note/%E5%AF%A6%E7%89%A9%E7%B6%93%E9%A9%97/valueinjecterver-3.2.0%E7%B0%A1%E5%96%AE%E7%94%A8%E6%B3%95/</link>
    <pubDate>Mon, 10 May 2021 17:26:15 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/note/%E5%AF%A6%E7%89%A9%E7%B6%93%E9%A9%97/valueinjecterver-3.2.0%E7%B0%A1%E5%96%AE%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[基本用法 一般對應 var mapper = Mapper.Map&lt;TargetType&gt;(customer); or var mapper = Mapper.Map&lt;FromType, TargetType&gt;(customer); 客製化對應 1 2 3 4 5 6 7 Mapper.AddMap&lt;FromType, TargetType&gt;(src =&gt; { var res = new TargetType(); res.InjectFrom(src); // 對應相同名字及型別的屬性 res.FullName = src.FirstName + &#34; &#34; + src.LastName; return res; }); InjectFrom 的用法 In]]></description>
</item>
</channel>
</rss>
