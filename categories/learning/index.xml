<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Learning - 分類 - The Lazy Engineer Lou&#39;s Note</title>
        <link>https://loulazynote.github.io/categories/learning/</link>
        <description>Learning - 分類 - The Lazy Engineer Lou&#39;s Note</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-TW</language><managingEditor>louChang.tw@gmail.com (Lou Chang)</managingEditor>
            <webMaster>louChang.tw@gmail.com (Lou Chang)</webMaster><lastBuildDate>Tue, 05 Jul 2022 19:08:13 &#43;0800</lastBuildDate><atom:link href="https://loulazynote.github.io/categories/learning/" rel="self" type="application/rss+xml" /><item>
    <title>MicrosoftPowerPlatformInfo</title>
    <link>https://loulazynote.github.io/note/microsoftpowerplatforminfo/</link>
    <pubDate>Tue, 05 Jul 2022 19:08:13 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/note/microsoftpowerplatforminfo/</guid>
    <description><![CDATA[Test ]]></description>
</item>
<item>
    <title>OOP 物件導向學習筆記</title>
    <link>https://loulazynote.github.io/posts/ooplearning/</link>
    <pubDate>Fri, 10 Jun 2022 17:26:15 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/posts/ooplearning/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/33840759/174276650-199850f5-64a2-455e-95fa-3eb26faa9acf.png" referrerpolicy="no-referrer">
            </div>物件導向四大原則 封裝(Encapsulation) 封裝（Encapsulation）在物件導向程式設計中是用來將資料與函式的實作內容包裝、隱]]></description>
</item>
<item>
    <title>C# 基礎複習Note(型別系統)</title>
    <link>https://loulazynote.github.io/posts/csharpbasicpart1/</link>
    <pubDate>Thu, 09 Jun 2022 22:37:31 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/posts/csharpbasicpart1/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/33840759/172874309-d5f95c7d-8359-46f0-9385-b75fa6128d39.png" referrerpolicy="no-referrer">
            </div>型別系統 概觀 ❗ 是強型別語言, 每個變數和常數都有型別 ❗ 在 C# bool 中無法轉換成 int 儲存在類型中的資訊可以包含下列 型別的變數需要的儲存空間 它可以代表的最]]></description>
</item>
<item>
    <title>Git 學習筆記</title>
    <link>https://loulazynote.github.io/posts/git-learning/</link>
    <pubDate>Wed, 08 Jun 2022 23:20:17 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/posts/git-learning/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/33840759/172868224-5e506cb8-1e89-4353-ade6-d4334bbddf9a.png" referrerpolicy="no-referrer">
            </div>位於索引中的檔案 : Tracked files(追蹤的檔案) 不再索引內的檔案 : Untracked files(未被追蹤的檔案) working tree 是工作目錄 只要 被索引中的檔案內容 跟 工作目錄中]]></description>
</item>
</channel>
</rss>
