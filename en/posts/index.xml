<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - The Lazy developer: Lou&#39;s Note</title>
        <link>https://loulazynote.github.io/en/posts/</link>
        <description>All Posts | The Lazy developer: Lou&#39;s Note</description>
        <generator>Hugo -- gohugo.io</generator><language>en-US</language><managingEditor>louChang.tw@gmail.com (Lou Chang)</managingEditor>
            <webMaster>louChang.tw@gmail.com (Lou Chang)</webMaster><lastBuildDate>Tue, 28 Jun 2022 20:22:05 &#43;0800</lastBuildDate><atom:link href="https://loulazynote.github.io/en/posts/" rel="self" type="application/rss+xml" /><item>
    <title>SeriLog setting&#39;s tips 2022</title>
    <link>https://loulazynote.github.io/en/serilogusage/</link>
    <pubDate>Tue, 28 Jun 2022 20:22:05 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/en/serilogusage/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/33840759/177329007-4e2a8b4c-5458-4d2f-83d0-00d51dada175.png" referrerpolicy="no-referrer">
            </div>Installation Use NuGet to search for and install the Serilog.AspNetCore package Add configuration in Program.cs 1 2 3 4 5 6 7 Log.Logger = new LoggerConfiguration() .MinimumLevel.Override(&#34;Microsoft&#34;, LogEventLevel.Warning) .MinimumLevel.Override(&#34;System&#34;, LogEventLevel.Warning)//Use MinimumLevel to set the LogLevel. If the source is from Microsoft or system messages, then the LogLevel is set to Warning .WriteTo.Console(new RenderedCompactJsonFormatter()) .WriteTo.File(new CompactJsonFormatter().ToString())//Output templates, output to Console and File .Enrich.FromLogContext() .CreateLogger(); CompactJsonFormatter will preserve message templates, properties, and formatting information so that rendered messages can be created later.]]></description>
</item>
<item>
    <title>Git Learning Note</title>
    <link>https://loulazynote.github.io/en/git_learning_note/</link>
    <pubDate>Wed, 08 Jun 2022 23:20:17 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/en/git_learning_note/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/33840759/172868224-5e506cb8-1e89-4353-ade6-d4334bbddf9a.png" referrerpolicy="no-referrer">
            </div>Files in the index: Tracked files Files not in the index: Untracked files The working tree is the working directory. As long as the content of the files in the index is consistent with the content of the files in the working directory, it is called a &ldquo;Stage&rdquo; state. As long as the content of the files in the index is inconsistent with the content of the files in the working directory, it is called an &ldquo;Unstage&rdquo; state.]]></description>
</item>
</channel>
</rss>
