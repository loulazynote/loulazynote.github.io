<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>CSharp - 標籤 - The Lazy developer: Lou&#39;s Note</title>
        <link>https://loulazynote.github.io/zh-tw/tags/csharp/</link>
        <description>CSharp - 標籤 - The Lazy developer: Lou&#39;s Note</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Fri, 17 Mar 2023 19:38:36 &#43;0800</lastBuildDate><atom:link href="https://loulazynote.github.io/zh-tw/tags/csharp/" rel="self" type="application/rss+xml" /><item>
    <title>MeiliSearch 常用Cli 設定</title>
    <link>https://loulazynote.github.io/zh-tw/meilisearchcliusage/</link>
    <pubDate>Fri, 17 Mar 2023 19:38:36 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/zh-tw/meilisearchcliusage/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://docs.meilisearch.com/logo.svg" referrerpolicy="no-referrer">
            </div><h2 id="meilisearch-常用cli-設定">MeiliSearch 常用Cli 設定</h2>
<h3 id="前言">前言</h3>
<p>關於MeiliSearch有一些在使用前可以做的設定, 官方也提供多種方式都與安裝方式有關, 這篇就記錄一下這些設定要怎麼使用(主要以Cli方式)</p>]]></description>
</item>
<item>
    <title>MeiliSearch基本用法</title>
    <link>https://loulazynote.github.io/zh-tw/meilisearchbasicusage/</link>
    <pubDate>Wed, 08 Mar 2023 16:23:41 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/zh-tw/meilisearchbasicusage/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://docs.meilisearch.com/logo.svg" referrerpolicy="no-referrer">
            </div><h2 id="meilisearch網稱-美麗搜尋">MeiliSearch(網稱 美麗搜尋)</h2>
<h3 id="前言">前言</h3>
<p>讓我玩了接近4個月的套件, 讓我踩雷滿滿的套件, 還要應付User腦洞大開的奇幻冒險, 怎麼可以不留下記錄呢?<!-- raw HTML omitted -->
但相比其他幾套知名的開源全文檢索套件來說, 這套真的比較輕量也比較簡單</p>]]></description>
</item>
<item>
    <title>ValueInjecter@3.2.0 簡單用法</title>
    <link>https://loulazynote.github.io/zh-tw/valueinjecterver-3.2.0simpleusage/</link>
    <pubDate>Wed, 22 Jun 2022 20:00:00 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/zh-tw/valueinjecterver-3.2.0simpleusage/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/33840759/176204169-641d7ace-e7b9-4ee8-83a4-1b7f0b3300cc.png" referrerpolicy="no-referrer">
            </div><h2 id="基本用法">基本用法</h2>
<ol>
<li>
<p>一般對應</p>
<ul>
<li><code>var mapper = Mapper.Map&lt;TargetType&gt;(customer);</code></li>
<li><code>var mapper = Mapper.Map&lt;FromType, TargetType&gt;(customer);</code></li>
</ul>
</li>
<li>
<p>客製化對應</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cs" data-lang="cs"><span class="line"><span class="cl"><span class="n">Mapper</span><span class="p">.</span><span class="n">AddMap</span><span class="p">&lt;</span><span class="n">FromType</span><span class="p">,</span> <span class="n">TargetType</span><span class="p">&gt;(</span><span class="n">src</span> <span class="p">=&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="kt">var</span> <span class="n">res</span> <span class="p">=</span> <span class="k">new</span> <span class="n">TargetType</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"> <span class="n">res</span><span class="p">.</span><span class="n">InjectFrom</span><span class="p">(</span><span class="n">src</span><span class="p">);</span> <span class="c1">// 對應相同名字及型別的屬性</span>
</span></span><span class="line"><span class="cl"> <span class="n">res</span><span class="p">.</span><span class="n">FullName</span> <span class="p">=</span> <span class="n">src</span><span class="p">.</span><span class="n">FirstName</span> <span class="p">+</span> <span class="s">&#34; &#34;</span> <span class="p">+</span> <span class="n">src</span><span class="p">.</span><span class="n">LastName</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"> <span class="k">return</span> <span class="n">res</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pr]]></description>
</item>
<item>
    <title>OOP 物件導向學習筆記</title>
    <link>https://loulazynote.github.io/zh-tw/ooplearning/</link>
    <pubDate>Fri, 10 Jun 2022 17:26:15 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/zh-tw/ooplearning/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/33840759/174276650-199850f5-64a2-455e-95fa-3eb26faa9acf.png" referrerpolicy="no-referrer">
            </div><h2 id="物件導向四大原則">物件導向四大原則</h2>
<h3 id="封裝_encapsulation_">封裝(<em>Encapsulation</em>)</h3>
<p>封裝（<em>Encapsulation</em>）在物件導向程式設計中是用來將資料與函式的實作內容包裝、隱藏起來的技巧，其中資料更常被稱為類別的成員屬性（<em>Attributes</em>）、函式更常被稱為類別的成員方法（<em>Methods</em>）。</p>]]></description>
</item>
<item>
    <title>C# 基礎複習Note(型別系統)</title>
    <link>https://loulazynote.github.io/zh-tw/csharpbasicpart1/</link>
    <pubDate>Thu, 09 Jun 2022 22:37:31 &#43;0800</pubDate>
    <author>Lou Chang</author>
    <guid>https://loulazynote.github.io/zh-tw/csharpbasicpart1/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/33840759/172874309-d5f95c7d-8359-46f0-9385-b75fa6128d39.png" referrerpolicy="no-referrer">
            </div><h2 id="型別系統-概觀">型別系統 概觀</h2>
<p>&#x2757; 是強型別語言, 每個變數和常數都有型別 &#x2757;</p>
<blockquote>
<p>在 C# bool 中無法轉換成 int</p>
</blockquote>
<ul>
<li>儲存在類型中的資訊可以包含下列
<ul>
<li>型別的變數需要的儲存空間</li>
<li>它可以代表的最大值和最小值</li>
<li>它所包含的成員 (方法、欄位、事件等等)</li>
<li>它繼承自的基底型別</li>
<li><code>interface</code> (實作)</li>
<li>允許的作業類型</li>
</ul>
</li>
</ul>
<blockquote>
<ol>
<li>編譯器會將型別資訊視為中繼資料內嵌至可執行檔</li>
<li>通用語言執行平台 (<em>CLR</em>) 會在執行階段使用該中繼資料，以在它配置和回收記憶體時，進一步保證型別安全</li>
</ol>
</blockquote>
<h3 id="變數宣告中指定類型">變數宣告中指定類型</h3>
<p>&#x2757; 程式中宣告變數或常數時 必須指定其類型 &#x2757;</p>]]></description>
</item>
</channel>
</rss>
